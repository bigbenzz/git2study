1.装箱与拆箱
装箱是将基本的数据类型转换成相应的引用类型 int/integer
拆箱是将引用数据类型转换成为基本数据类型


2.==与equals的区别
①==对于基本数据类型是比较值是否相等，对于引用数据类型是比较其地址是否相等
②equals不能比较基本数据类型


3.string，stringbuiler，stringbuffer的区别
①string底层是由一个final修饰的数组实现的，内容不可变
②其他两种内容都可变，所以需要进行字符拼接的时候，使用后面两种，因为使用string的话由于他内容不可变就需要创建多个对象
③stringbuilder是线程不安全的，效率高；stringbuffer是线程安全的，效率低下

4.java中的集合
分为两种：value和key-value
①value的有list和set
	list是有序序，可以重复的
		list常用的
			①ArrayList：底层是数组，查询快，增删慢
			②LinkList：底层是链表，增删快，查询慢
	set是无序且不能重复的
②key-value为map


5.HashMap和HashTable的区别
①HashMap可是使用null存储到key或者value中 HashTable不行
②前者线程不安全，效率高，后者相反


6.拷贝文件使用字节流还是字符流
因为不确定文件的类型（图片/视频），需要保证其通用性一律使用字节流。


7.线程的实现方式以及启动
①通过继承thread类实现线程  继承只能单继承，拓展性不强  创建实例调用start（）方法 调用setName可以给线程取名字
②通过实现Runable接口	


8.设计模式
单例：饱汉  懒汉
  ①构造方法私有化，让除了自己类中能创建外其他地方都不能创建，在自己的类中创建一个单实例（饱汉是一出来就创建单实例，懒汉是需要的时候再创建单实例）
  ②提供一个方法获取该实例对象
工厂：spring ioc
代理：spring aop


9.session和cookie的区别
①都是会话跟踪技术
②session在服务端，cookie在客户端
③cookie的存储大小比较小
④重要信息存储在session中


10.三大范式
①要满足第三范式，先满足第二范式，自然也要满足第一范式
②第一范式：数据不可分割	  第二范式：主键	   第三范式：外键


11.数据库连接池的作用
①限制数据库的个数，不会导致由于数据库过多而导致系统运行缓慢或者崩溃
②数据库连接不需要每次都去创建或者销毁
③是数据库的响应时间变快，因为不用去创建


12.spring的理解
①SpringIOC:控制反转（以前创建对象需要自己new，现在只需要从springioc容器中拿），依赖注入（将属性注入给对象，将对象注入给springioc容器）；；；就像社会主义的终极目标，要什么给什么，但是需要先放进去。
②SpringAop：切面编程
	①切入点：定义函数在哪里执行，比如在多个类中要实现同一个方法，如果都在每个类中写此方法，管理就会复杂，这时候，SpringAop就解决的这个难题，切进去执行，统一管理。
	②切面：需要定义一个切入点，每个类中一个切入点，多个类连接起来就是一个切面。

























